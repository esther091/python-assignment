Truthy and Falsy values in strings, numbers, lists, tuple, dictionary, set:
In Python, truthy  and falsy  values determine how expressions evaluate in a boolean context (like if, while, or bool() conversion). Here's a breakdown of truthy and falsy values for different data types:
________________________________________
Strings
Falsy : "" (empty string)
Truthy : Any non-empty string (e.g., "hello", " ")
bool("")       # False
bool("hello")  # True
________________________________________
Numbers (int, float, etc.)
Falsy : 0, 0.0
Truthy : Any non-zero number (e.g., 1, -5, 3.14)
bool(0)     # False
bool(3.14)  # True
________________________________________
Lists
Falsy : [] (empty list)
Truthy : Any list with at least one element (e.g., [1], ['a'])
bool([])      # False
bool([1, 2])  # True
________________________________________
Tuples
Falsy : () (empty tuple)
Truthy : Any tuple with at least one element (e.g., (1,), (0,))
bool(())       # False
bool((1, 2))   # True
________________________________________
Dictionaries
Falsy : {} (empty dictionary)
Truthy : Any dictionary with at least one key-value pair (e.g., {"a": 1})
bool({})            # False
bool({"key": 42})   # True
________________________________________
Sets
Falsy : set() (empty set)
Truthy : Any set with at least one element (e.g., {1}, {0})
bool(set())     # False
bool({1, 2})    # True
________________________________________
•	Truthy values are values that evaluate to True in a boolean context.
•	Falsy values are values that evaluate to False in a boolean context.
•	Falsy values include empty sequences (lists, tuples, strings, dictionaries, sets), zero in every numeric type, None, and False.
•	Truthy values include non-empty sequences, numbers (except 0 in every numeric type), and basically every value that is not falsy.
•	They can be used to make your code more concise.

